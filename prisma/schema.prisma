// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  email       String       @unique
  records     Record[]
  recordTypes RecordType[]
}

model Record {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  startsAt  DateTime   @default(now())
  endsAt    DateTime
  type      RecordType @relation(fields: [typeId], references: [id])
  typeId    Int

  @@index([typeId])
  @@index([userId])
}

model RecordType {
  id              Int                  @id @default(autoincrement())
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  user            User                 @relation(fields: [userId], references: [id])
  userId          Int
  name            String
  records         Record[]
  schemas         RecordSchema[]
  currentSchema   CurrentRecordSchema? // validate in application code
  currentSchemaId Int                  @unique

  @@index([userId])
}

model RecordSchema {
  id                    Int                  @id @default(autoincrement())
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  type                  RecordType           @relation(fields: [typeId], references: [id])
  typeId                Int
  currentRecordSchema   CurrentRecordSchema?
  currentRecordSchemaId Int

  @@index([typeId])
}

model CurrentRecordSchema {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  type      RecordType   @relation(fields: [typeId], references: [id])
  typeId    Int          @unique
  schema    RecordSchema @relation(fields: [schemaId], references: [id])
  schemaId  Int          @unique
}
